log:
  full-format: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n"
  prod-format: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) project_id=%X{project_id} | user=%X{user} | action=%X{action} | activity=%X{activity} | src_ip=%X{src_ip} | applog=%X{applog} | message=%m%n"

app:
  name: @name@
  description: @description@
  version: @version@
  id: ID-99999

jwt:
  refresh-expiration: 90000

mp:
  jwt:
    verify:
      publickey:
        location: classpath:keys/publicKey.pem
  openapi:
    model.reader: dev.sandrocaseiro.template.configs.SwaggerConfig
    filter: dev.sandrocaseiro.template.configs.SwaggerConfig

quarkus:
  datasource:
    db-kind: postgresql
  default-locale: en-US
  health:
    extensions:
      enabled: false
    openapi:
      included: false
  hibernate-orm:
    dialect: org.hibernate.dialect.PostgreSQL95Dialect
  http:
    auth:
      proactive: false
    cors:
      ~: true
      origins: "*"
      headers: "*"
      exposed-headers: Content-Disposition,Content-Length,Content-Type
      methods: GET,POST,PUT,DELETE,OPTIONS
      access-control-max-age: 24H
    enable-compression: true
    port: 8080
  liquibase:
    change-log: db/changelog.xml
    migrate-at-start: false
  locales: en-US,pt-BR
  log:
    min-level: INFO
    level: INFO
    console:
      color: true
      format: ${log.full-format}
    handler:
      console:
        APP_LOG:
          enable: true
          level: INFO
          color: true
          format: ${log.prod-format}
    category:
      dev.sandrocaseiro.template:
        level: INFO
        handlers: APP_LOG
  resteasy:
    gzip:
      enabled: true
      max-input: 3M
  smallrye-health:
    root-path: _monitor
    liveness-path: info


smallrye:
  jwt:
    sign:
      key:
        location: classpath:keys/privateKey.pem
    new-token:
      lifespan: 6000
    token:
      header: Authorization
      schemes: Bearer
    verify:
      algorithm: RS256
      key-format: PEM_KEY
    time-to-live: 6000
    expiration.grace: 0

"%dev":
  quarkus:
    datasource:
      jdbc:
        url: jdbc:postgresql://localhost:32500/template
      username: postgres
      password: 1234
    health:
      extensions:
        enabled: true
      openapi:
        included: true
    hibernate-orm:
      log:
        bind-parameters: true
        sql: true
        format-sql: true
    http:
      root-path: /api
    liquibase:
      migrate-at-start: true
      default-schema-name: public
      contexts: dev
    log:
      min-level: TRACE
      level: INFO
      category:
        org.hibernate.type.descriptor.sql.BasicBinder:
          level: TRACE
        io.quarkus.smallrye.jwt:
          level: INFO
        io.smallrye.jwt:
          level: INFO
      console:
        format: ${log.full-format}
  smallrye:
    jwt:
      new-token:
        lifespan: 60000
      time-to-live: 90000

"%test":
  quarkus:
    container-image:
      build: false
    datasource:
      db-kind: h2
      devservices: false
      jdbc:
        url: jdbc:h2:mem:testdb;MODE=PostgreSQL;
      username: postgres
      password: 1234
    hibernate-orm:
      dialect: org.hibernate.dialect.H2Dialect
    liquibase:
      migrate-at-start: true
      contexts: test

"%prod":
  quarkus:
    log:
      file:
        enabled: true
        format: ${log.prod-format}
        path: /appserver/logs/api-template/api-template.log
        file-suffix: .yyyy-MM-dd
"%local":
  quarkus:
    config:
      profile:
        parent: dev
    datasource:
      jdbc:
        url: jdbc:postgresql://localhost:32500/template
      username: postgres
      password: 1234
    health:
      extensions:
        enabled: true
      openapi:
        included: true
    hibernate-orm:
      log:
        bind-parameters: true
    http:
      root-path: /api
    log:
      min-level: TRACE
